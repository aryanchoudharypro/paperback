if(VCPKG_TARGET_IS_WINDOWS)
	vcpkg_check_linkage(ONLY_STATIC_LIBRARY)
else()
	vcpkg_check_linkage(ONLY_DYNAMIC_LIBRARY)
endif()

if(VCPKG_TARGET_IS_WINDOWS)
	if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
		set(PDFIUM_PLATFORM "win-x64")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "x86")
		set(PDFIUM_PLATFORM "win-x86")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
		set(PDFIUM_PLATFORM "win-arm64")
	else()
		message(FATAL_ERROR "Unsupported Windows architecture: ${VCPKG_TARGET_ARCHITECTURE}")
	endif()
elseif(VCPKG_TARGET_IS_LINUX)
	if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
		set(PDFIUM_PLATFORM "linux-x64")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "x86")
		set(PDFIUM_PLATFORM "linux-x86")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
		set(PDFIUM_PLATFORM "linux-arm64")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm")
		set(PDFIUM_PLATFORM "linux-arm")
	else()
		message(FATAL_ERROR "Unsupported Linux architecture: ${VCPKG_TARGET_ARCHITECTURE}")
	endif()
elseif(VCPKG_TARGET_IS_OSX)
	if(VCPKG_TARGET_ARCHITECTURE STREQUAL "x64")
		set(PDFIUM_PLATFORM "mac-x64")
	elseif(VCPKG_TARGET_ARCHITECTURE STREQUAL "arm64")
		set(PDFIUM_PLATFORM "mac-arm64")
	else()
		message(FATAL_ERROR "Unsupported macOS architecture: ${VCPKG_TARGET_ARCHITECTURE}")
	endif()
else()
	message(FATAL_ERROR "Unsupported platform")
endif()

vcpkg_download_distfile(ARCHIVE URLS "https://github.com/bblanchon/pdfium-binaries/releases/latest/download/pdfium-${PDFIUM_PLATFORM}.tgz" FILENAME "pdfium-${PDFIUM_PLATFORM}.tgz" SKIP_SHA512)
vcpkg_extract_source_archive_ex(OUT_SOURCE_PATH SOURCE_PATH ARCHIVE ${ARCHIVE} NO_REMOVE_ONE_LEVEL)

file(INSTALL "${SOURCE_PATH}/include/" DESTINATION "${CURRENT_PACKAGES_DIR}/include" FILES_MATCHING PATTERN "*.h")
if(VCPKG_TARGET_IS_WINDOWS)
	file(INSTALL "${SOURCE_PATH}/lib/pdfium.dll.lib" DESTINATION "${CURRENT_PACKAGES_DIR}/lib" RENAME "pdfium.lib")
	if(EXISTS "${SOURCE_PATH}/debug/lib/pdfium.dll.lib")
		file(INSTALL "${SOURCE_PATH}/debug/lib/pdfium.dll.lib" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib" RENAME "pdfium.lib")
	else()
		file(INSTALL "${SOURCE_PATH}/lib/pdfium.dll.lib" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib" RENAME "pdfium.lib")
	endif()
	file(INSTALL "${SOURCE_PATH}/bin/" DESTINATION "${CURRENT_PACKAGES_DIR}/bin" FILES_MATCHING PATTERN "*.dll")
	if(EXISTS "${SOURCE_PATH}/debug/bin/")
		file(INSTALL "${SOURCE_PATH}/debug/bin/" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/bin" FILES_MATCHING PATTERN "*.dll")
	else()
		file(INSTALL "${SOURCE_PATH}/bin/" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/bin" FILES_MATCHING PATTERN "*.dll")
	endif()
elseif(VCPKG_TARGET_IS_OSX)
	file(INSTALL "${SOURCE_PATH}/lib/libpdfium.a" DESTINATION "${CURRENT_PACKAGES_DIR}/lib")
	if(EXISTS "${SOURCE_PATH}/debug/lib/libpdfium.a")
		file(INSTALL "${SOURCE_PATH}/debug/lib/libpdfium.a" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib")
	else()
		file(INSTALL "${SOURCE_PATH}/lib/libpdfium.a" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib")
	endif()
else()
	file(INSTALL "${SOURCE_PATH}/lib/libpdfium.so" DESTINATION "${CURRENT_PACKAGES_DIR}/lib")
	if(EXISTS "${SOURCE_PATH}/debug/lib/libpdfium.so")
		file(INSTALL "${SOURCE_PATH}/debug/lib/libpdfium.so" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib")
	else()
		file(INSTALL "${SOURCE_PATH}/lib/libpdfium.so" DESTINATION "${CURRENT_PACKAGES_DIR}/debug/lib")
	endif()
endif()

file(WRITE "${CURRENT_PACKAGES_DIR}/share/pdfium/pdfium-config.cmake" "
include(CMakeFindDependencyMacro)

if(NOT TARGET pdfium::pdfium)
	get_filename_component(_IMPORT_PREFIX \"\${CMAKE_CURRENT_LIST_FILE}\" PATH)
	get_filename_component(_IMPORT_PREFIX \"\${_IMPORT_PREFIX}\" PATH)
	get_filename_component(_IMPORT_PREFIX \"\${_IMPORT_PREFIX}\" PATH)
	if(WIN32 OR APPLE)
		add_library(pdfium::pdfium STATIC IMPORTED)
		set_target_properties(pdfium::pdfium PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\${_IMPORT_PREFIX}/include\")
		if(WIN32)
			set_target_properties(pdfium::pdfium PROPERTIES IMPORTED_LOCATION_RELEASE \"\${_IMPORT_PREFIX}/lib/pdfium.lib\" IMPORTED_LOCATION_DEBUG \"\${_IMPORT_PREFIX}/debug/lib/pdfium.lib\")
		else()
			set_target_properties(pdfium::pdfium PROPERTIES IMPORTED_LOCATION_RELEASE \"\${_IMPORT_PREFIX}/lib/libpdfium.a\" IMPORTED_LOCATION_DEBUG \"\${_IMPORT_PREFIX}/debug/lib/libpdfium.a\")
		endif()
		set_target_properties(pdfium::pdfium PROPERTIES IMPORTED_LINK_INTERFACE_LANGUAGES \"CXX\")
	else()
		add_library(pdfium::pdfium SHARED IMPORTED)
		set_target_properties(pdfium::pdfium PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"\${_IMPORT_PREFIX}/include\")
		set_target_properties(pdfium::pdfium PROPERTIES IMPORTED_LOCATION_RELEASE \"\${_IMPORT_PREFIX}/lib/libpdfium.so\" IMPORTED_LOCATION_DEBUG \"\${_IMPORT_PREFIX}/debug/lib/libpdfium.so\")
	endif()
endif()
")

if(EXISTS "${SOURCE_PATH}/LICENSE")
	vcpkg_install_copyright(FILE_LIST "${SOURCE_PATH}/LICENSE")
endif()
